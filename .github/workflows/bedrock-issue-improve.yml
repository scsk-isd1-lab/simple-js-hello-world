name: Bedrock PR Improve

on:
  pull_request_review:
    types: [submitted]

permissions:
  id-token: write
  contents: write
  pull-requests: write

env:
  AWS_REGION: "ap-northeast-1"

jobs:
  improve:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    steps:
      - name: Checkout PR head
        uses: actions/checkout@v4
        with:
          ref: refs/pull/${{ github.event.pull_request.number }}/head
          fetch-depth: 0

      - name: Assume AWS Role using OIDC
        uses: aws-actions/configure-aws-credentials@v5.0.0
        with:
          role-to-assume: arn:aws:iam::649844050696:role/isd1-lab-iamrole-github-actions-deploy
          role-session-name: GitHub_to_AWS_via_FederatedOIDC
          aws-region: ${{ env.AWS_REGION }}

      - name: Invoke Bedrock Agent via Python SDK
        id: bedrock
        env:
          AGENT_ID: "HG3FHKX9GY"
          AGENT_ALIAS_ID: "Y7IXOPEHZ2"
          PROMPT: |
            役割: あなたは司令塔（Coordinator）です。以下の2エージェントに改修依頼を出し、必要な変更をこのリポジトリの当該PRブランチに直接反映させてください。
            - 設計エージェント: アーキテクチャ/UX/アクセシビリティ/セキュリティ/パフォーマンス/依存/テスト観点から改善点を抽出し、改修方針と根拠を提示。
            - 実装エージェント: 具体的なコード変更（.js/.html）の実装、不要コード整理、バグ修正、パフォーマンス微調整、Lint/Format適用を担当。

            対象: このPRの差分およびブランチ全体。小さく安全な変更から適用すること。

            実施要件:
            - 変更はこのジョブ内でファイルへ直接反映する（後続ステップでコミット・プッシュ）。
            - 変更は論理単位でまとめ、コミットメッセージに目的を簡潔に記す。
            - セキュリティ/アクセシビリティ/パフォーマンスの退行がないことを重視。

            出力（日本語）:
            ### 設計エージェント: 改修方針
            - 目的/影響/根拠

            ### 実装エージェント: 変更点
            - ファイル別の具体的変更（必要なら行番号）

            ### 完了チェックリスト
            - Lint/ビルド/表示確認
        run: |
          set -euo pipefail
          python scripts/bedrock_invoke_agent.py

      - name: Post improve summary as PR comment
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const fs = require('fs');
            let body = '';
            try { body = fs.readFileSync('bedrock_agent_text.txt', 'utf8').trim(); } catch (e) {}
            if (!body) {
              let raw = '';
              try { raw = fs.readFileSync('bedrock_agent_output.json', 'utf8'); } catch (e) { raw = '(no output)'; }
              // truncate to avoid oversized comments
              const snippet = raw.length > 60000 ? raw.slice(0, 60000) + '\n...[truncated]...' : raw;
              body = 'Bedrockの出力が空でした。参考ログ:\n\n```\n' + snippet + '\n```';
            }
            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.payload.pull_request.number,
              body
            });
